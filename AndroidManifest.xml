<?xml version="1.0" encoding="utf-8"?>
<manifest 
    xmlns:android="http://schemas.android.com/apk/res/android"
    package="net.randomprocesses.flickr"
    android:versionCode="1"
    android:versionName="1.0">

  <!-- Duh. -->
  <uses-permission android:name="android.permission.INTERNET" />
  <!-- Required to add accounts of type "Flickr" -->
  <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
  <!-- Required to use the authentication token for a Flickr account -->
  <uses-permission android:name="android.permission.USE_CREDENTIALS" />
  <!-- Required to read/write Flickr contact data -->
  <uses-permission android:name="android.permission.READ_CONTACTS" />
  <uses-permission android:name="android.permission.WRITE_CONTACTS" />
  <!-- Required to set up Flick contact/activity syncing -->
  <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
  <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
  <!-- Requried to sync photos to external storage -->
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.DOWNLOAD_WITHOUT_NOTIFICATION" />

  <application android:icon="@drawable/icon" android:label="@string/app_name">
    <!-- Authentication-related stuff
    ============================================================================= -->
    <!-- This service is mostly required boilerplate for account-related requests -->
    <service android:name=".auth.AuthenticatorService" android:exported="true">
      <intent-filter>
        <action android:name="android.accounts.AccountAuthenticator" />
      </intent-filter>
      <!-- This XML resource describes various account-related data -->
      <meta-data
          android:name="android.accounts.AccountAuthenticator"
          android:resource="@xml/authenticator" />
    </service>

    <!-- This is the activity that gets kicked off to handle account creation. -->
    <!-- "singleInstance" is deliberate. The account creation request will trigger
    this activity, and the subsequent forwarding URL from Flickr
    (flickr://www.randomprocesses.net/) will then return to this single instance
    triggering its onNewIntent() method with the returned frob -->
    <activity
        android:name=".auth.AuthenticatorActivity"
        android:launchMode="singleInstance"
        android:excludeFromRecents="true">
      <intent-filter>
        <action android:name="android.intent.action.VIEW" />  
        <category android:name="android.intent.category.DEFAULT" />
        <category android:name="android.intent.category.BROWSABLE" />
        <data android:scheme="flickr" android:host="www.randomprocesses.net" />
      </intent-filter>
    </activity>
    <!-- This activity will be called to handle account-specific preferences. -->
    <activity
        android:name=".prefs.AccountPreferencesActivity"
        android:excludeFromRecents="true">
      <!-- No intent filter here. This will be called programatically -->
    </activity>
    <!-- End of authentication-related stuff -->

    <!-- Sync-related stuff
    ============================================================================= -->
    <service android:name=".sync.ContactsSyncService" android:exported="true">
      <intent-filter>
        <action android:name="android.content.SyncAdapter" />
      </intent-filter>
      <meta-data
          android:name="android.content.SyncAdapter"
          android:resource="@xml/syncadapter_contacts" />
      <meta-data
          android:name="android.provider.CONTACTS_STRUCTURE"
          android:resource="@xml/contacts_structure" />
    </service>
    <service android:name=".sync.ActivitySyncService" android:exported="true">
      <intent-filter>
        <action android:name="android.content.SyncAdapter" />
      </intent-filter>
      <meta-data
          android:name="android.content.SyncAdapter"
          android:resource="@xml/syncadapter_activity" />
    </service>
    <service android:name=".sync.PhotosSyncService" android:exported="true">
      <intent-filter>
        <action android:name="android.content.SyncAdapter" />
      </intent-filter>
      <meta-data
          android:name="android.content.SyncAdapter"
          android:resource="@xml/syncadapter_photos" />
    </service>
    <receiver
        android:name=".sync.DownloadCompleteReceiver"
        android:enabled="true"
        android:exported="true">
      <intent-filter>
        <action android:name="android.intent.action.DOWNLOAD_COMPLETE"/>
      </intent-filter>
    </receiver>
    <!-- This activity simply latches on to the intent that's created when the user
    clicks on the profile link in the contacts-view. It will just redirect to a
    browser-viewing activity for that user's flickr-profile. -->
    <activity
        android:name=".sync.ContactsProfileActivity"
        android:label="@string/app_name"
        android:noHistory="true"
        android:excludeFromRecents="true">
      <intent-filter>
        <action android:name="android.intent.action.VIEW" />
        <category android:name="android.intent.category.DEFAULT" />
        <data android:mimeType="vnd.android.cursor.item/vnd.com.flickr.android.profile" />
      </intent-filter>
    </activity>
    <!-- This activity is called when a notification is clicked to view new activity
    from the user's contacts. -->
    <activity
        android:name=".sync.ContactsActivityActivity"
        android:label="@string/app_name"
        android:noHistory="true"
        android:excludeFromRecents="true">
      <!-- No intent filter here. This will be called programatically -->
    </activity>
    
    <!-- Content providers
    ============================================================================= -->
    <provider
        android:name=".content.ActivityContentProvider"
        android:authorities="net.randomprocesses.flickr.activity"
        android:syncable="true"
        android:label="@string/activity"
        android:enabled="true"
        android:exported="false" />
    <provider
        android:name=".content.PhotosContentProvider"
        android:authorities="net.randomprocesses.flickr.photos"
        android:syncable="true"
        android:label="@string/photos"
        android:enabled="true"
        android:exported="false" />
  </application>
  <uses-sdk android:minSdkVersion="13" />
</manifest> 